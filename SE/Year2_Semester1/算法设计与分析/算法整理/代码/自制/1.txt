//流水作业问题

#include <iostream>
#include <algorithm>
#include <cstring>
#define N 6
using namespace std;
class Jobtype
{
public:
    int key;     // 执行时间
    int index;    // 作业序号
    bool job;   //1为第一组，0为第二组
    int operator <= (Jobtype a) const
// 重载<=号
    {
        return (key <= a.key);
    }
};
bool compare(Jobtype a, Jobtype b)
{
    return a.key<b.key;
}

int FlowShop(int n, int a[], int b[], int c[])
{
    Jobtype *d=new Jobtype[n];
    int i;
    for (i=0; i<n; i++)
    {
        d[i].key=a[i]>b[i] ? b[i] : a[i];
        d[i].job=a[i]<b[i];
        d[i].index=i;
    }
    sort(d, d + n, compare);   // 按d增序
    int j=0, k=n-1;
    for (i=0; i<n; i++)
    {
        if(d[i].job) c[j++]=d[i].index;
        else c[k--]=d[i].index;
    }
    j=a[c[0]];
    k=j+b[c[0]];
    for (i=1; i<n; i++)
    {
        j+=a[c[i]];
        k=j<k ? k+b[c[i]] : j+b[c[i]];
    }
    delete d;
    return k;
}

int main()
{
    int  a[N]= {3,12,5,2,8,11}, b[N]= {7,10,9,6,4,1}, c[N]= {0};
    cout<<FlowShop(N, a, b, c);
    cout<<endl;
    for (int i=0; i<N; i++)
        cout<<c[i]+1<<"  ";
    cout<<endl;
    return 0;
}

